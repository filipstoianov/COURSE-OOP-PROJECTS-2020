<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtable">
<title>table Class Reference</title>
<indexterm><primary>table</primary></indexterm>
<para>
<computeroutput>#include &lt;table.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtable_1abba3ea52658e29d833ed1bcb2a5b7cc4">table</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classtable_1ae1800c1039fc2dddb84b3e315c94e371">table</link> (std::string str_new)</para>
</listitem>
            <listitem><para><link linkend="_classtable_1a314d9cf6ee35be9ac221982599a57d8d">~table</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_classtable_1a00aacb2f10e14ba223950ac75cfdb7e1">call_to</link> (int conter_cell)</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1a974540609d16008cede77fa6570d2c6a">point</link> (std::string s)</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1aa6666bb1d464831573d7341aed6c9d36">line</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1abea63c517192e79c95dceaa0e47dc89e">empty</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1aaee7ed67b892540c962ac2df0732aad0">formula2</link> (std::string input, std::string cell)</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1a9a222c56821f53ae9cfe44049033a283">position_of_cell</link> (std::string cell_ind)</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a1e5343ee0fc874564822923d2548b3a0">max_len</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1aa23acfd1866ac6650e0c3353bbd52cbd">is_valid</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_classtable_1ac4064378c3c5c4fa747dc0c9ab392499">convert_again</link> (double degree)</para>
</listitem>
            <listitem><para>double <link linkend="_classtable_1ab5371b618bb9ba262de24c55e2d7417e">convert_string</link> (std::string s)</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1abce66815cb07fd10c615eeb226b36083">change_value</link> (std::string new_str, std::string cell_str)</para>
</listitem>
            <listitem><para>double <link linkend="_classtable_1aceefaa77e7961390a5e97ef4e9fd5136">formula_degree</link> (std::string <link linkend="_classtable_1a9d777c0e0db5b57b9a929f05f44bfa71">str</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a0470d9ac377bc23ef61cdf66b76f5479">check_for</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1a7fa96bb4eca43b07e4f3b89c46a669bf">count_symbol1</link> (std::string s)</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1a65ca0d70341c7edad4a0383f0fa72dfb">count_symbol2</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a482d9962c110d608f51cbe7366d3e87a">formula</link> (std::string input, std::string cell)</para>
</listitem>
            <listitem><para>bool <link linkend="_classtable_1a6b2ae5a1029e14c3d6f6ed1cf22bf646">is_digit</link> (std::string <link linkend="_classtable_1a9d777c0e0db5b57b9a929f05f44bfa71">str</link>)</para>
</listitem>
            <listitem><para>std::string <link linkend="_classtable_1ae6c94b4f393de18bfb8ee61db749bbd2">copy</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a87f6de0a6d05c8caf3090156e1ab3aab">print</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a2e5a376f26645c8b1e7151ae8e1adaad">init_file</link> (std::string filename)</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a8af051416887ce28d1be8de98a429a56">save_file</link> (std::fstream new_file, char *filename)</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a6c979e3e7a9324b39f176f6c50681c34">init_index</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtable_1a440a5ba1d76f6fb07f7d6100600ce914">insert_to</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_classtable_1a9d777c0e0db5b57b9a929f05f44bfa71">str</link></para>
</listitem>
            <listitem><para>int * <link linkend="_classtable_1abe24b80ffe4ee8d937c92581e5b9e507">index</link> = (int*)(malloc(sizeof(int)))</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1af4f5301263efa135b04402327565ae3f">size</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1ad0d0a085668cb1bc3226a7d1dc655094">max_rps</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_classtable_1a394c50cbceb44fa39434ba2b7fb4c987">max_word</link> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 8 of file table.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtable_1abba3ea52658e29d833ed1bcb2a5b7cc4"/>    <section>
    <title>table()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>table</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>table</secondary></indexterm>
<para><computeroutput>table::table ( )</computeroutput></para>
<para>All methods used in this prrogram </para>
<para>
Definition at line 3 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1ae1800c1039fc2dddb84b3e315c94e371"/>    <section>
    <title>table()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>table</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>table</secondary></indexterm>
<para><computeroutput>table::table (std::string str_new)</computeroutput></para>
<para>The constructor of class table </para>
<para>
Definition at line 16 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a314d9cf6ee35be9ac221982599a57d8d"/>    <section>
    <title>~table()</title>
<indexterm><primary>~table</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>~table</secondary></indexterm>
<para><computeroutput>table::~table ( )</computeroutput></para>
<para>The another constructor of class table </para>
<para>
Definition at line 24 of file table.cpp.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtable_1a00aacb2f10e14ba223950ac75cfdb7e1"/>    <section>
    <title>call_to()</title>
<indexterm><primary>call_to</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>call_to</secondary></indexterm>
<para><computeroutput>std::string table::call_to (int conter_cell)</computeroutput></para>
<para>The destructor of class table </para>
<para>
Definition at line 347 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1abce66815cb07fd10c615eeb226b36083"/>    <section>
    <title>change_value()</title>
<indexterm><primary>change_value</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>change_value</secondary></indexterm>
<para><computeroutput>void table::change_value (std::string new_str, std::string cell_number)</computeroutput></para>
<para>Convert type &quot;string&quot; to type &quot;double&quot;</para>

<para>Take value of this cell </para>
<para>
Definition at line 365 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a0470d9ac377bc23ef61cdf66b76f5479"/>    <section>
    <title>check_for()</title>
<indexterm><primary>check_for</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>check_for</secondary></indexterm>
<para><computeroutput>void table::check_for ( )</computeroutput></para><para>
Definition at line 294 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1ac4064378c3c5c4fa747dc0c9ab392499"/>    <section>
    <title>convert_again()</title>
<indexterm><primary>convert_again</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>convert_again</secondary></indexterm>
<para><computeroutput>std::string table::convert_again (double degree)</computeroutput></para><para>
Definition at line 86 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1ab5371b618bb9ba262de24c55e2d7417e"/>    <section>
    <title>convert_string()</title>
<indexterm><primary>convert_string</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>convert_string</secondary></indexterm>
<para><computeroutput>double table::convert_string (std::string s)</computeroutput></para>
<para>Convert type &quot;double&quot; to type &quot;string&quot; </para>
<para>
Definition at line 78 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1ae6c94b4f393de18bfb8ee61db749bbd2"/>    <section>
    <title>copy()</title>
<indexterm><primary>copy</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>copy</secondary></indexterm>
<para><computeroutput>std::string table::copy ( )</computeroutput></para>
<para>Check for whether it is number </para>
<para>
Definition at line 701 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a7fa96bb4eca43b07e4f3b89c46a669bf"/>    <section>
    <title>count_symbol1()</title>
<indexterm><primary>count_symbol1</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>count_symbol1</secondary></indexterm>
<para><computeroutput>int table::count_symbol1 (std::string s)</computeroutput></para>
<para>Check for valid type </para>
<para>
Definition at line 94 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a65ca0d70341c7edad4a0383f0fa72dfb"/>    <section>
    <title>count_symbol2()</title>
<indexterm><primary>count_symbol2</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>count_symbol2</secondary></indexterm>
<para><computeroutput>int table::count_symbol2 ( )</computeroutput></para>
<para>Count the &apos;|&apos; symbols in &quot;str&quot;&apos; </para>
<para>
Definition at line 107 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1abea63c517192e79c95dceaa0e47dc89e"/>    <section>
    <title>empty()</title>
<indexterm><primary>empty</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>empty</secondary></indexterm>
<para><computeroutput>void table::empty ( )</computeroutput></para>
<para>Return number of lines in the current table </para>
<para>
Definition at line 57 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a482d9962c110d608f51cbe7366d3e87a"/>    <section>
    <title>formula()</title>
<indexterm><primary>formula</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>formula</secondary></indexterm>
<para><computeroutput>void table::formula (std::string input, std::string cell)</computeroutput></para>
<para>Count the number of lines in &quot;str&quot; </para>
<para>
Definition at line 405 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1aaee7ed67b892540c962ac2df0732aad0"/>    <section>
    <title>formula2()</title>
<indexterm><primary>formula2</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>formula2</secondary></indexterm>
<para><computeroutput>void table::formula2 (std::string input, std::string cell)</computeroutput></para>
<para>Delete content of the string &quot;str&quot; </para>
<para>
Definition at line 570 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1aceefaa77e7961390a5e97ef4e9fd5136"/>    <section>
    <title>formula_degree()</title>
<indexterm><primary>formula_degree</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>formula_degree</secondary></indexterm>
<para><computeroutput>double table::formula_degree (std::string str)</computeroutput></para>
<para>Change the value of the cell </para>
<para>
Definition at line 597 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a2e5a376f26645c8b1e7151ae8e1adaad"/>    <section>
    <title>init_file()</title>
<indexterm><primary>init_file</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>init_file</secondary></indexterm>
<para><computeroutput>void table::init_file (std::string filename)</computeroutput></para>
<para>Print the current content of the table,file,string </para>
<para>
Definition at line 181 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a6c979e3e7a9324b39f176f6c50681c34"/>    <section>
    <title>init_index()</title>
<indexterm><primary>init_index</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>init_index</secondary></indexterm>
<para><computeroutput>void table::init_index ( )</computeroutput></para>
<para>Save the changed content in file </para>
<para>
Definition at line 199 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a440a5ba1d76f6fb07f7d6100600ce914"/>    <section>
    <title>insert_to()</title>
<indexterm><primary>insert_to</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>insert_to</secondary></indexterm>
<para><computeroutput>void table::insert_to ( )</computeroutput></para>
<para>Save the position of &apos;|&apos; and &apos;
<literallayout>&#160;&#xa;</literallayout>
&apos; symbols in the string array Initialize save_index[] array </para>
<para>
Definition at line 224 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a6b2ae5a1029e14c3d6f6ed1cf22bf646"/>    <section>
    <title>is_digit()</title>
<indexterm><primary>is_digit</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>is_digit</secondary></indexterm>
<para><computeroutput>bool table::is_digit (std::string str)</computeroutput></para>
<para>Change the cell&apos;s value with formula </para>
<para>
Definition at line 120 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1aa23acfd1866ac6650e0c3353bbd52cbd"/>    <section>
    <title>is_valid()</title>
<indexterm><primary>is_valid</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>is_valid</secondary></indexterm>
<para><computeroutput>void table::is_valid ( )</computeroutput></para>
<para>Find the biggest amount of cells in a table&apos;s line </para>
<para>
Definition at line 389 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1aa6666bb1d464831573d7341aed6c9d36"/>    <section>
    <title>line()</title>
<indexterm><primary>line</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>line</secondary></indexterm>
<para><computeroutput>int table::line ( )</computeroutput></para>
<para>Return how many symbols &apos;.&apos; there are in the string&apos;s content </para>
<para>
Definition at line 335 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a1e5343ee0fc874564822923d2548b3a0"/>    <section>
    <title>max_len()</title>
<indexterm><primary>max_len</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>max_len</secondary></indexterm>
<para><computeroutput>void table::max_len ( )</computeroutput></para>
<para>Return the number of cell&apos;s position </para>
<para>
Definition at line 169 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a974540609d16008cede77fa6570d2c6a"/>    <section>
    <title>point()</title>
<indexterm><primary>point</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>point</secondary></indexterm>
<para><computeroutput>int table::point (std::string s)</computeroutput></para>
<para>Take value of this cell </para>
<para>
Definition at line 64 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a9a222c56821f53ae9cfe44049033a283"/>    <section>
    <title>position_of_cell()</title>
<indexterm><primary>position_of_cell</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>position_of_cell</secondary></indexterm>
<para><computeroutput>int table::position_of_cell (std::string cell_ind)</computeroutput></para>
<para>The destructor of class table </para>
<para>
Definition at line 34 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a87f6de0a6d05c8caf3090156e1ab3aab"/>    <section>
    <title>print()</title>
<indexterm><primary>print</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>print</secondary></indexterm>
<para><computeroutput>void table::print ( )</computeroutput></para><para>
Definition at line 138 of file table.cpp.</para>
    </section><anchor xml:id="_classtable_1a8af051416887ce28d1be8de98a429a56"/>    <section>
    <title>save_file()</title>
<indexterm><primary>save_file</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>save_file</secondary></indexterm>
<para><computeroutput>void table::save_file (std::fstream new_file, char * filename)</computeroutput></para>
<para>This fragment initializes string &quot;str&quot; with the content of file </para>
<para>
Definition at line 714 of file table.cpp.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classtable_1abe24b80ffe4ee8d937c92581e5b9e507"/>    <section>
    <title>index</title>
<indexterm><primary>index</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>index</secondary></indexterm>
<para><computeroutput>int* table::index = (int*)(malloc(sizeof(int)))<computeroutput>[private]</computeroutput></computeroutput></para>
<para>Save content of file </para>
<para>
Definition at line 21 of file table.h.</para>
    </section><anchor xml:id="_classtable_1ad0d0a085668cb1bc3226a7d1dc655094"/>    <section>
    <title>max_rps</title>
<indexterm><primary>max_rps</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>max_rps</secondary></indexterm>
<para><computeroutput>int table::max_rps = 0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 26 of file table.h.</para>
    </section><anchor xml:id="_classtable_1a394c50cbceb44fa39434ba2b7fb4c987"/>    <section>
    <title>max_word</title>
<indexterm><primary>max_word</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>max_word</secondary></indexterm>
<para><computeroutput>int table::max_word = 0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 27 of file table.h.</para>
    </section><anchor xml:id="_classtable_1af4f5301263efa135b04402327565ae3f"/>    <section>
    <title>size</title>
<indexterm><primary>size</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>size</secondary></indexterm>
<para><computeroutput>int table::size = 0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line 25 of file table.h.</para>
    </section><anchor xml:id="_classtable_1a9d777c0e0db5b57b9a929f05f44bfa71"/>    <section>
    <title>str</title>
<indexterm><primary>str</primary><secondary>table</secondary></indexterm>
<indexterm><primary>table</primary><secondary>str</secondary></indexterm>
<para><computeroutput>std::string table::str<computeroutput>[private]</computeroutput></computeroutput></para>
<para>my_class table</para>

<para>These are private members of the class Table </para>
<para>
Definition at line 17 of file table.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
PROJECT1/<link linkend="_table_8h">table.h</link>PROJECT1/<link linkend="_table_8cpp">table.cpp</link></section>
</section>
